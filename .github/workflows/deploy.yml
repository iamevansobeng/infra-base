name: Deploy Tuagye

on:
  push:
    branches:
      - main # Production
      - develop # Development
  pull_request:
    branches: [main, develop]

env:
  PROJECT_NAME: tuagye

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: |
          cd frontend && npm ci
          cd ../api && npm ci

      - name: Run Tests
        run: |
          cd frontend && npm test
          cd ../api && npm test

  deploy:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set environment
        run: |
          if [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push API Image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build API
        run: |
          docker build ./api -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.PROJECT_NAME }}-api:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.PROJECT_NAME }}-api:${{ github.sha }}

      - name: Deploy Infrastructure
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          template: ./infrastructure/main.bicep
          parameters: >
            ./infrastructure/parameters/${{ env.ENVIRONMENT }}.parameters.json
            apiImageTag=${{ github.sha }}

      - name: Deploy Frontend
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |
          cd frontend
          npm ci
          npm run build
          npm run export  # For Next.js static export

      - name: Deploy to Azure Storage
        uses: azure/cli@v1
        with:
          inlineScript: |
            az storage blob upload-batch \
              --account-name ${{ env.PROJECT_NAME }}${{ env.ENVIRONMENT }}storage \
              --source frontend/out \
              --destination '$web'

      - name: Run Connectivity Tests
        run: ./infrastructure/scripts/test-connectivity.sh

      - name: Purge CDN
        if: env.ENVIRONMENT == 'prod'
        uses: azure/cli@v1
        with:
          inlineScript: |
            az cdn endpoint purge \
              --content-paths "/*" \
              --profile-name ${{ env.PROJECT_NAME }}-cdn \
              --name ${{ env.PROJECT_NAME }}-frontend \
              --resource-group ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-rg
